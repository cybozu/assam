{
  "extends": [
    ":label(renovate)", // Add label.
    ":prConcurrentLimit10", // Limit to maximum 10 open PRs.
    ":timezone(Asia/Tokyo)",
    ":enableVulnerabilityAlertsWithLabel(security)", // Raise PR when vulnerability alerts are detected with label security.
    ":semanticCommitTypeAll(chore)", // If semantic commits detected, use semantic commit type chore for all
    "schedule:monthly"
  ],
  dependencyDashboard: true,
  dependencyDashboardLabels: ["renovate"],
  "postUpdateOptions": [
    "gomodTidy" // Enable go mod tidy.
  ],
  "groupName": "all", // Combine pull requests into one
  regexManagers: [
    {
      fileMatch: ["^.tool-versions$"],
      matchStrings: ["golang (?<currentValue>\\d+\\.\\d+\\.\\d+)"],
      datasourceTemplate: "golang-version",
      depNameTemplate: "tool-versions/golang-version"
    },
    {
      fileMatch: ["^.tool-versions$"],
      matchStrings: ["golangci-lint (?<currentValue>\\d+\\.\\d+\\.\\d+)"],
      datasourceTemplate: "github-releases",
      depNameTemplate: "tool-versions/golangci-lint",
      extractVersionTemplate: "^v(?<version>.*)$"
    }
  ],
  packageRules: [
    {
      groupName: "golang-version",
      matchDatasources: ["golang-version"],
      matchManagers: ["gomod"]
    },
    {
      groupName: "golang-version",
      matchManagers: ["regex"],
      matchPackageNames: ["tool-versions/golang-version"]
    },
    {
      groupName: "golangci-lint",
      matchManagers: ["regex"],
      matchPackageNames: ["tool-versions/golangci-lint"]
    }
  ]
}
